@init_range_slider = () ->
  $.widget "ui.customslider",
    $.ui.slider,
    options: $.extend(
      {},
      $.ui.slider::options,
      rangeDrag: false
    )
    _mouseCapture: (event) ->
      o = @options
      position = undefined
      normValue = undefined
      distance = undefined
      closestHandle = undefined
      self = undefined
      index = undefined
      allowed = undefined
      offset = undefined
      mouseOverHandle = undefined
      return false  if o.disabled

      @elementSize =
        width: @element.outerWidth()
        height: @element.outerHeight()


      @elementOffset = @element.offset()
      position =
        x: event.pageX+15
        y: event.pageY

      normValue = @_normValueFromMouse(position)
      distance = @_valueMax() - @_valueMin() + 1
      self = this

      @handles.each (i) ->
        thisDistance = Math.abs(normValue - self.values(i))
        if distance > thisDistance
          distance = thisDistance
          closestHandle = $(this)
          index = i

      if o.range is true and @values(1) is o.min
        index += 1
        closestHandle = $(@handles[index])
      allowed = @_start(event, index)
      return false  if allowed is false
      @_mouseSliding = true
      self._handleIndex = index
      closestHandle.addClass("ui-state-active").focus()
      offset = closestHandle.offset()
      mouseOverHandle = not $(event.target).parents().andSelf().is(".ui-slider-handle")
      if mouseOverHandle
        @values(0,normValue-1)
        @values(1,normValue)
        return true

      @_clickOffset = (if mouseOverHandle then {left: 0, top: 0} else
        left: event.pageX - offset.left - (closestHandle.width() / 2)
        top: event.pageY - offset.top - (closestHandle.height() / 2) - (parseInt(closestHandle.css("borderTopWidth"), 10) or 0) - (parseInt(closestHandle.css("borderBottomWidth"), 10) or 0) + (parseInt(closestHandle.css("marginTop"), 10) or 0)
      )
      @_slide event, index, normValue  unless @handles.hasClass("ui-state-hover")
      @_animateOff = true
      true

  range_slider_block = $('.range_slider')
  filters = $('.filters')
  range_slider_block.each ->
    $this = $(this)
    max = $this.attr('data-count')

    selected_value = []
    selected_value.push parseInt($this.attr('data-selected').split(',')[0])
    selected_value.push parseInt($this.attr('data-selected').split(',')[1])
    $this.customslider({
      animate: true
      range: true
      min: 0
      max: max
      values: selected_value
      slide: (event, ui) ->
        return (ui.values[1] - ui.values[0] > 0)

      change: (event, ui) ->
        filters.trigger('changed')

      create: (event, ui) ->
        $('.ui-slider-handle').filter(":even").addClass('left_handle')
        $('.ui-slider-handle').filter(":odd").addClass('right_handle')
    })
